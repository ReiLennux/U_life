trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  KEYSTORE_FILE: $(KEYSTORE_FILE)
  KEYSTORE_PASSWORD: $(KEYSTORE_PASSWORD)
  KEY_ALIAS: $(KEY_ALIAS)
  KEY_PASSWORD: $(KEY_PASSWORD)

steps:
# Paso 1: Decodificar y Guardar el Keystore
- script: echo $(KEYSTORE_FILE) | base64 --decode > my-release-key.jks
  displayName: 'Decode Keystore'

# Paso 2: Configurar el entorno de firma
- script: |
    echo "signingConfigs {
        release {
            storeFile file('my-release-key.jks')
            storePassword '$(KEYSTORE_PASSWORD)'
            keyAlias '$(KEY_ALIAS)'
            keyPassword '$(KEY_PASSWORD)'
        }
    }" >> app/build.gradle
  displayName: 'Setup Signing Config'

# Paso 3: Compilar el Proyecto con Gradle
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    tasks: 'assembleRelease'

# Paso 4: Copiar los Archivos Generados
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.sourcesDirectory)/app/build/outputs/apk/release'
    Contents: '**/*.apk'
    TargetFolder: '$(build.artifactStagingDirectory)'

# Paso 5: Publicar los Artefactos de la Compilaci√≥n
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'


